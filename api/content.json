{
    "code": 10000,
    "data": {
        "change": "[TOC]\nÊõ¥Êñ∞ËÆ∞ÂΩï\n=======\n\nv1.0.12 2019-07-22\n------------------\n\n- add: Ê∑ªÂä†‰∏§‰∏™`trait`; Êñπ‰æøÂú®‰øÆÊîπÂíåÂà†Èô§‰πãÂâçÊàñËÄÖ‰πãÂêéÊ∏ÖÁêÜÁºìÂ≠òÔºõ\n    - `BeforeTrait` Âú®‰øÆÊîπÂíåÂà†Èô§‰πãÂâçÊâßË°å `clearCache` ÊñπÊ≥ï\n    - `AfterTrait` Âú®‰øÆÊîπÂíåÂà†Èô§‰πãÂêéÊâßË°å `clearCache` ÊñπÊ≥ï\n\nv1.0.11 2019-07-05\n------------------\n\n- refactor: ‰ºòÂåñ `repository` `update` ÊñπÊ≥ï Â¶ÇÊûúÊòØÈÄöËøá‰∏ªÈîÆ‰øÆÊîπÔºå‰∏çËµ∞ÊâπÈáè‰øÆÊîπ(ÂèØ‰ª•Ëµ∞‰øÆÊîπÂô®)\n- add: `repository` Ê∑ªÂä† `filterPaginate` ÊñπÊ≥ï ËøáÊª§Êü•ËØ¢ÂàÜÈ°µÊï∞ÊçÆ‰ø°ÊÅØ\n\nv1.0.10 2019-06-27\n------------------\n\n- refactor: `repository`‰∏≠`getRelationModel`ÊñπÊ≥ï‰ºòÂåñ\n\n    ÊúâÂÖ≥ËÅî`count`Êü•ËØ¢ÔºåÂ¶ÇÊûúÊåáÂÆöÂ≠óÊÆµÔºåÈÇ£‰πà‰∏çÊü•ËØ¢ÂÖ®ÈÉ®Â≠óÊÆµ\n\n- refactor: `repository`‰∏≠`findWhere`‰ºòÂåñÔºåÂØπÂÖ≥ËÅîÊï∞ÁªÑÊü•ËØ¢ÊîØÊåÅ\n\n    ```php\n    $this->userRepository->findWhere([\n        'and', \n        ['username' => 1, 'age' => 2],\n        ['or', ['name' => '1', 'name' => 2]]\n    ])->get();\n    ```\n\nv1.0.9 2019-06-15\n-----------------\n\n- fix: `findWhere`Êü•ËØ¢`or`Êü•ËØ¢ÁöÑbug \n- add: `repository`Êü•ËØ¢ÊåáÂÆöÂ≠óÊÆµÂÖ≥ËÅîÂ≠óÊÆµÊ∑ªÂä†ÊîØÊåÅÂèçÂêëÂÖ≥ËÅî\n\nv1.0.8 2019-06-12\n-----------------\n\n- add: `repository`Ê∑ªÂä†Êñ∞ÊñπÊ≥ï\n    - `findWhere(array $where, array $columns = [])`ÈÄöËøáÊï∞ÁªÑÊü•ËØ¢Êï∞ÊçÆ,ÊîØÊåÅÊõ¥Â§çÊùÇÁöÑÊü•ËØ¢\n    \n    ```php\n    $this->userRepository->findWhere([\n        'and',\n        ['or', ['username', 'like', 'test'], ['age' => 5]],\n        ['level' => 5]\n    ])->get();\n    \n    \/\/ sql: where ((`username` like 'test' or `age` = 5) and `level` = 5)\n    ```\n- remove: Âà†Èô§Â§ö‰Ωô‰ª£Á†ÅÁîüÊàêÂëΩ‰ª§\n\nv1.0.7 2019-06-06\n-----------------\n\n- add: repository ÊîØÊåÅÊõ¥Â§öÁöÑ model ÂéüÁîüÊñπÊ≥ï\n\n     * @method Model firstOrCreate(array $attributes, array $value = [])\n     * @method Model firstOrNew(array $attributes, array $value = [])\n     * @method Model updateOrCreate(array $attributes, array $value = [])\n     * @method Model findOrFail($id, $columns = ['*'])\n     * @method Model findOrNew($id, $columns = ['*'])\n     * @method Model findMany($ids, $columns = ['*'])\n     \n- add: repository Ê∑ªÂä†‰∫ã‰ª∂Â§ÑÁêÜÊñπÊ≥ï\n    - beforeCreate(array $data)\n    - afterCreate(array $data, array $news)\n    - beforeUpdate(array $conditions, array $data)\n    - afterUpdate(array $conditions, array $data, $row)\n    - beforeDelete(array $conditions)\n    - afterDelete(array $conditions, $row)\n\n- fix: ‰øÆÂ§ç withCount ‰∏çÂ≠òÂú®Êä•ÁöÑÈîôËØØ\n\nv1.0.6 2019-06-03\n-----------------\n- add: repository Ê∑ªÂä† getFilterModel($conditions, $fields) ÊñπÊ≥ï\n\nv1.0.5 2019-06-02\n-----------------\n\n- change: repository ÊâÄÊúâÊñπÊ≥ïÂÖ®ÈÉ®ÂØπÂ§ñÂºÄÊîæ(ÊñπÊ≥ïÂÖ®ÈÉ®‰∏∫public)\n\nv1.0.4 2019-06-02\n-----------------\n\n- bug: Âõ†‰∏∫ÊâπÈáèËµãÂÄº‰ΩøÁî®ÁöÑÊòØÈªëÂêçÂçïÂà∂Ôºålaravel ‰∏ç‰ºöËá™Â∑±ËøáÊª§Â§ö‰ΩôÂ≠óÊÆµÔºåÂØºËá¥Êñ∞Â¢ûÊó∂ÂÄôÊ∑ªÂä†‰∫ÜÂ§ö‰ΩôÂ≠óÊÆµbug‰øÆÂ§ç\n\nv1.0.3 2019-06-02\n-----------------\n\n- change: model Ê≤°ÊúâÈÄöËøáÂ≠óÊÆµ columns ÂÆö‰πâË°®ÁöÑÂ≠óÊÆµÔºåÈÇ£‰πàÈÄöËøáÊï∞ÊçÆÂ∫ìÊü•ËØ¢Ëé∑ÂèñË°®ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ\n",
        "home": "laravel-repository\n==================\n\n![Progress](http:\/\/progressed.io\/bar\/100?title=completed&class=images)[![Latest Stable Version](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/v\/stable)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![Total Downloads](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/downloads)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![Latest Unstable Version](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/v\/unstable)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![License](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/license)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![GitHub stars](https:\/\/img.shields.io\/github\/stars\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/stargazers)[![GitHub issues](https:\/\/img.shields.io\/github\/issues\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/issues)[![GitHub forks](https:\/\/img.shields.io\/github\/forks\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/network)[![Laravel](https:\/\/img.shields.io\/badge\/Laravel%20%5E5.5-support-brightgreen.svg)](https:\/\/github.com\/laravel\/laravel)\n\n[TOC]\n\n[ÂàáÊç¢‰∏≠Êñá](\/?page=home.zh-cn) | [Usage of Repository](\/?page=repository)\n\n## Introduction\n\n`laravel-repository` provides the basic `repository` class for [laravel](https:\/\/laravel.com\/)[model](https:\/\/learnku.com\/docs\/laravel\/5.5\/eloquent\/1332) The package was made to provide more\nMore external methods, and more friendly editor prompts; layering the code, `repository` is \nresponsible for external business logic processing, `model` is only responsible for the definition \nof the fields, attributes, query conditions, and return values of the data table. It does not \nparticipate in specific logical operations, and does not serve the control layer.\n\n\n### Relative to the direct use of `model` advantages:\n\n- Solve the problem that `model` does not automatically handle extra fields when adding or modifying\n- Optimize chained calls for `model` queries, query directly using arrays\n- Automatically process corresponding associated data queries through query conditions and query fields\n- Provides a more friendly editor prompt\n\n## Install\n\n### Installation requirements\n\n- PHP >= 7.0.0\n- Laravel >= 5.5.0\n\n### 1.1 Install package\n\n```bash\ncomposer require littlebug\/laravel-repository\n```\n\n### 1.2 Use the command to generate `model` and `repository`\n\nSuppose you have users in your database, or you replace users with the table names in your database.\n\n```bash\nphp artisan core:model --table=users --name=User\n```\nThe command will be at:\n\n- Generate `User` file under `app\/Models\/` file\n- Generate `UserRepository` file under `app\/Repositories\/` file\n\n### 1.3 Using `repository` in the controller\n\n```php\n\nuse App\\Repositories\\UserRepository;\n\nclass UsersController extends Controller \n{\n    \/**\n     * @var UserRepository\n     *\/\n    private $userRepository;\n    \n    public function __construct(UserRepository $userRepository)\n    {\n        $this->userRepository   = $userRepository;\n    }\n    \n    public function index()\n    {\n        \/\/ Paging query\n        $list = $this->userRepository->paginate([\n            'name:like' => 'test123', \n            'status:in' => [1, 2],\n        ]);\n        \n        return view('users.index');\n    }\n    \n    public function create()\n    {\n        list($ok, $msg, $user) = $this->userRepository->create(request()->all());\n        \/\/ You are right logic\n    }\n    \n    public function update()\n    {\n        list($ok, $msg, $row) = $this->userRepository->update(request()->input('id'), request()->all());\n        \/\/ You are right logic\n    }\n    \n    public function delete()\n    {\n        list($ok, $msg, $row) = $this->userRepository->delete(request()->input('id'));\n        \/\/ You are right logic\n    }\n}\n\n```\n\n#### 1.3.1 About paging query data\n\n![member message ÁöÑÊï∞ÊçÆ](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/data-list.jpg 'member message ÁöÑÊï∞ÊçÆ')\n\n## Please check more about `repository`\n\n[Please check more about `repository`](\/?page=repository)\n\n## More code generation commands\n\n> Commands support specifying database connections such as --table=dev.users\n\n1. `core:model` generates `model` class files and `repository` class files by querying database table information.\n\n    ```bash\n    php artisan core:model --table=users --name=User\n    ```\n\n2. `core:repository` generates the `repository` class file\n\n    ```bash\n    php artisan core:repository --model=User --name=UserRepository\n    ```\n\n3. `core:request` generates `request` verification class file by querying database table information\n\n    ```bash\n    php artisan core:request --table=users --path=Users\n    ```\n\n### Command Parameter Details\n\n![commands of generate code](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/commands.png 'core of commands')\n\n#### thanks for [jinxing.liu](https:\/\/mylovegy.github.io\/blog\/) and seven üíêüåπ\n\n#### if my repository is helpful to you, give me a star to encourage me~ ‚ú®, I will continue to maintain this project.",
        "home.zh-cn": "laravel-repository\n==================\n\n![Progress](http:\/\/progressed.io\/bar\/100?title=completed&class=images)[![Latest Stable Version](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/v\/stable)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![Total Downloads](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/downloads)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![Latest Unstable Version](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/v\/unstable)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![License](https:\/\/poser.pugx.org\/littlebug\/laravel-repository\/license)](https:\/\/packagist.org\/packages\/littlebug\/laravel-repository)[![GitHub stars](https:\/\/img.shields.io\/github\/stars\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/stargazers)[![GitHub issues](https:\/\/img.shields.io\/github\/issues\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/issues)[![GitHub forks](https:\/\/img.shields.io\/github\/forks\/Wanchaochao\/laravel-repository.svg)](https:\/\/github.com\/Wanchaochao\/laravel-repository\/network)[![Laravel](https:\/\/img.shields.io\/badge\/Laravel%20%5E5.5-support-brightgreen.svg)](https:\/\/github.com\/laravel\/laravel)\n\n[change to English](\/?page=home) | [Repository ‰ΩøÁî®ÊñáÊ°£](\/?page=repository.zh-cn) \n\n[TOC]\n\n## ÁÆÄ‰ªã\n\n`laravel-repository` Êèê‰æõ‰∫ÜÂü∫Á°ÄÁöÑ `repository` Á±ª, ÂØπ[laravel](https:\/\/laravel.com\/) ÁöÑ \n[model](https:\/\/learnku.com\/docs\/laravel\/5.5\/eloquent\/1332) ËøõË°å‰∫ÜÁöÑÂ∞ÅË£ÖÔºåÊèê‰æõÊõ¥\nÂ§öÁöÑÂØπÂ§ñÁöÑÊñπÊ≥ïÔºå‰ª•ÂèäÊõ¥ÂèãÂ•ΩÁöÑÁºñËæëÂô®ÊèêÁ§∫ÔºõÂØπ‰ª£Á†ÅËøõË°å‰∫ÜÁöÑÂàÜÂ±ÇÔºå`repository` Ë¥üË¥£ÂØπÂ§ñÁöÑ‰∏öÂä°ÈÄªËæëÂ§ÑÁêÜÔºå\n`model` Âè™Ë¥üË¥£ÂØπÊï∞ÊçÆË°®ÁöÑÂ≠óÊÆµ„ÄÅÂ±ûÊÄß„ÄÅÊü•ËØ¢Êù°‰ª∂„ÄÅËøîÂõûÂÄºÁöÑÂÆö‰πâÔºå‰∏çÂèÇ‰∏éÂÖ∑‰ΩìÁöÑÈÄªËæëËøêÁÆóÔºå‰∏çÂØπÊéßÂà∂Â±ÇÊúçÂä°\n\n### Áõ∏ÂØπ‰∫éÁõ¥Êé•‰ΩøÁî®`model`‰ºòÂäøÔºö\n\n- Ëß£ÂÜ≥`model`Âú®Êñ∞Â¢û„ÄÅ‰øÆÊîπÊó∂‰∏çËá™Âä®Â§ÑÁêÜÂ§ö‰ΩôÂ≠óÊÆµÈóÆÈ¢ò\n- ‰ºòÂåñ`model`Êü•ËØ¢Êó∂ÁöÑÈìæÂºèË∞ÉÁî®ÔºåÁõ¥Êé•‰ΩøÁî®Êï∞ÁªÑÁöÑÊñπÂºèËøõË°åÊü•ËØ¢\n- ÈÄöËøáÊü•ËØ¢Êù°‰ª∂ÂíåÊü•ËØ¢Â≠óÊÆµÔºåËá™Âä®Â§ÑÁêÜÂØπÂ∫îÁöÑÂÖ≥ËÅîÊï∞ÊçÆÊü•ËØ¢\n- Êèê‰æõ‰∫ÜÊõ¥ÂèãÂ•ΩÁöÑÁºñËæëÂô®ÊèêÁ§∫\n\n## ÂÆâË£Ö‰ΩøÁî®\n\n### ÂÆâË£ÖË¶ÅÊ±Ç\n\n- PHP >= 7.0.0\n- Laravel >= 5.5.0\n\n### 1.1 ÂÆâË£ÖÂåÖÊñá‰ª∂\n\n```bash\ncomposer require littlebug\/laravel-repository\n```\n\n### 1.2 ‰ΩøÁî®ÂëΩ‰ª§ÁîüÊàê `model` Âíå `repository`\n\nÂÅáËÆæ‰Ω†ÁöÑÊï∞ÊçÆÂ∫ì‰∏≠Â≠òÂú® users, ÊàñËÄÖ‰Ω†Â∞Ü users ÊõøÊç¢‰∏∫‰Ω†Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑË°®ÂêçÁß∞\n\n```bash\nphp artisan core:model --table=users --name=User\n```\nËØ•ÂëΩ‰ª§‰ºöÂú®:\n\n- `app\/Models\/` Êñá‰ª∂‰∏ãÁîüÊàê `User` Êñá‰ª∂\n- `app\/Repositories\/` Êñá‰ª∂‰∏ãÁîüÊàê `UserRepository`  Êñá‰ª∂ \n\n### 1.3 Âú®ÊéßÂà∂Âô®‰∏≠‰ΩøÁî® `repository`\n\n```php\n\nuse App\\Repositories\\UserRepository;\n\nclass UsersController extends Controller \n{\n    \/**\n     * @var UserRepository\n     *\/\n    private $userRepository;\n    \n    public function __construct(UserRepository $userRepository)\n    {\n        $this->userRepository   = $userRepository;\n    }\n    \n    public function index()\n    {\n        \/\/ ÂàÜÈ°µÊü•ËØ¢\n        $list = $this->userRepository->paginate([\n            'name:like' => 'test123', \n            'status:in' => [1, 2],\n        ]);\n        \n        return view('users.index');\n    }\n    \n    public function create()\n    {\n        list($ok, $msg, $user) = $this->userRepository->create(request()->all());\n        \/\/ ‰Ω†ÁöÑÈÄªËæë\n    }\n    \n    public function update()\n    {\n        list($ok, $msg, $row) = $this->userRepository->update(request()->input('id'), request()->all());\n        \/\/ ‰Ω†ÁöÑÈÄªËæë\n    }\n    \n    public function delete()\n    {\n        list($ok, $msg, $row) = $this->userRepository->delete(request()->input('id'));\n        \/\/ ‰Ω†ÁöÑÈÄªËæë\n    }\n}\n\n```\n\n#### 1.3.1 ÂÖ≥‰∫éÂàÜÈ°µÊü•ËØ¢Êï∞ÊçÆ\n\n![member message ÁöÑÊï∞ÊçÆ](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/data-list.jpg 'member message ÁöÑÊï∞ÊçÆ')\n\n## `repository`‰ΩøÁî®ÊñáÊ°£\n\n[ÂÖ≥‰∫é`repository`Êõ¥Â§ö‰ΩøÁî®ÊñπÊ≥ïËØ∑Êü•Áúã](\/?page=repository.zh-cn)\n\n## Êõ¥Â§öÁöÑ‰ª£Á†ÅÁîüÊàêÂëΩ‰ª§\n\n>ÂëΩ‰ª§ÈÉΩÊîØÊåÅÊåáÂÆöÊï∞ÊçÆÂ∫ìËøûÊé• ‰æãÂ¶Ç --table=dev.users  \n\n1. `core:model` ÈÄöËøáÊü•ËØ¢Êï∞ÊçÆÂ∫ìË°®‰ø°ÊÅØÁîüÊàê `model` Á±ªÊñá‰ª∂ Âíå `repository` Á±ªÊñá‰ª∂\n\n    ```bash\n    php artisan core:model --table=users --name=User\n    ```\n\n2. `core:repository` ÁîüÊàê `repository` Á±ªÊñá‰ª∂ \n\n    ```bash\n    php artisan core:repository --model=User --name=UserRepository  \n    ```\n\n3. `core:request` ÈÄöËøáÊü•ËØ¢Êï∞ÊçÆÂ∫ìË°®‰ø°ÊÅØÁîüÊàê `request` È™åËØÅÁ±ªÊñá‰ª∂\n\n    ```bash\n    php artisan core:request --table=users --path=Users\n    ```\n\n### ÂëΩ‰ª§ÂèÇÊï∞ËØ¶ÊÉÖ\n\n![commands of generate code](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/commands.png 'core of commands')\n\n\n#### ÊÑüË∞¢ Â§©‰∏ãÁ¨¨‰∏É Âíå [jinxing.liu](https:\/\/mylovegy.github.io\/blog\/) Ë¥°ÁåÆÁöÑ‰ª£Á†Å üíêüåπ\n\n#### Â¶ÇÊûúËøô‰∏™‰ªìÂ∫ìÂ∏ÆÂä©Âà∞‰∫Ü‰Ω†ÔºåÁªôÊàë‰∏Ä‰∏™starÊù•ÈºìÂä±Êàë~ ‚ú®,Êàë‰ºöÂùöÊåÅÁªßÁª≠Áª¥Êä§Ëøô‰∏™‰ªìÂ∫ì",
        "repository": "### Usage Instructions for Repository\n\n[TOC]\n\n[home](\/?page=home)|[ÂàáÊç¢‰∏≠Êñá](\/?page=repository.zh-cn)\n\n---\n\n#### CURD\n\n```php\n# create\n\n\/**\n * About the res\n * @param boolean $ok   true: successful, false: failed\n * @param string  $msg  about the message\n * @param array   $data the data, it`s null when failed \n *\/\n$this-repository->create([\n    'user_name' => 'Tony',\n    'age'       => 18,\n    'sex'       => 1,\n    'address    => 'America'\n]);\n```\n\n```php\n# delete\n\/**\n * About the res\n * @param boolean $ok   true: successful, false: failed\n * @param string  $msg  the message of res\n * @param int     $rows the number of data were deleted\n *\/\n$this->repository->delete(1); \/\/pk = 1\n$this->repository->delete(['id:gt' => 10]); \/\/ delete id > 10\n``` \n\n```php\n# update\n\/**\n * About the res\n * @param boolean $ok   true: successful, false: failed\n * @param string  $msg  the message of res\n * @param int     $rows the number of data were updated\n *\/\n$this->repository->update(['name:like' => '%555'], [\n    'type' => 3,\n    'money' => 9999\n]);\n```\n\n```php\n# query\n# A column of a piece of data\n$id = $this->repository->findBy(1, 'name'); \/\/ Êü•Êüê‰∏™Â≠óÊÆµ\n# A piece of data\n$this-repository->find(1); \/\/ PK was 1\n# Multiple data\n$this-repository->findAll(['user_id' => 10])\n# All values of a field in the result set\n$this-repository->findAllBy(['user_id' => 10], 'name');\n\n``` \n\n#### page data\n\nRepository->paginate($conditions = [], $fields = [], $pageSize = 10, $currentPage = null)\n\n```php\n$list = $this->repository->paginate(['status' => 1], ['id', 'name', ...]);\n```\n\n#### use expression to query data\n\n> The following methods support expression queries\n\n1. find\n2. findBy\n3. findAll\n4. findAllBy\n5. paginate\n6. update\n7. delete\n8. filterFind\n9. filterFindAll\n10. getFilterModel\n11. findCondition\n\n> usage\n\n'column:expression' => 'value'\n\n```php\n\n$items = $this->repository->findAll([\n    'id:neq'    => 1,\n    'name:like' => '%test%'\n]);\n\n\/\/ result condition : `id` != 1 and `name` like '%test%' \n```\n\n#### the expressions we support\n\n| expression |    meaning   |      desc     |\n|:------     |:-------------|:--------------|\n| eq         |       =      |               |\n| neq        |      !=      |               |\n| ne         |      !=      |               |\n| gt         |      >       |               |\n| egt        |      >=      |               |\n| gte        |      >=      |               |\n| ge         |      >=      |               |\n| lt         |      <       |               |\n| le         |      <=      |               |\n| lte        |      <=      |               |\n| elt        |      <=      |               |\n| in         |      IN      | need an array | \n| not in     |    NOT IN    | need an array | \n| not_in     |    NOT IN    | need an array | \n| between    |    between   | need an array | \n| not_between| not between  | need an array | \n| not between| not between  | need an array | \n| like       |     like     | need a string | \n| not_like   |    not like  | need a string | \n| not like   |    not like  | need a string | \n| rlike      |     rlike    |               | \n| <>         |      <>      |               | \n| auto_like  |     like     |   auto add %  |\n\n#### about auto_like \n\n```php\n\/\/ if there is no '%' at your conditionÔºåRepository will auto add '%' ('%test%')\n$this->repository->findAll(['username:auto_like' => 'test']); \n\n\/\/ if you write '%'ÔºåRepository won`t add any '%' to your condition\n$this->repository->findAll(['username:auto_like' => 'test%']);\n\n```\n\n```php\n\/\/ you can use the expression like this:\n# find the data where id > 10\n$this->repository->findAll(['id:gt' => 10]);\n\n# find the data where id != 10\n$this->repository->findAll(['id:neq' => 10]);\n\n# find the data where id in 1,2,3,4,5\n$this->repository->findAll(['id:in' => [1,2,3,4,5]);\n\n# find the data where created_at is between \n# 2019-01-01 00:00:00 and 2020-01-01 00:00:00\n$this->repository->findAll(['created_at:between' => \n    [\n        '2019-01-01 00:00:00', \n        '2020-01-01 00:00:00\n    ]\n]);\n\n# stop the account end with @@@\n$this->repository->update(['name:like' => '%@@@'], ['status' => 0]);\n\n``` \n\n\n#### Advanced usage\n\n```php\n# Example 1:\n# For example, you have an users table, \n# the user`s extension info saved in user_ext table\n# maybe you want to find the users and its extension info \n# at the same time\n\n# step 1.Determining model relationships at Users.php(model)\n\n\/**\n * @return \\Illuminate\\Database\\Eloquent\\Relations\\HasOne\n *\/\npublic function extInfo()\n{\n    # if foreignKey == localKey, you could only write the first user_id \n    # that`s enough\n    return $this->hasOne(UsersExt::class, 'user_id');\n}\n\n# step 2.do like this\n$this->userRepository->findAll(\n    ['status' => 1],  \/\/ filters\n    [\n        '*', \/\/ users columns\n        'extInfo' => [\n            \/\/ user_ext columns\n            'address', \n            'sex', \n            'hobby', \n            'phone'\n        ] \n    ]\/\/ fields\n);\n```\n\n```php\n# Example 2:\n# the same tables, users and user_ext\n# maybe you want to find the users who user_id > 10 and address is NewYork\n\n# step 1.\n# define scope in users model like this\n\n\/**\n * @param $query\n * @param $address\n * @return mixed\n *\/\npublic function scopeAddress($query, $address)\n{\n    return $query->leftJoin('user_ext', function ($join) use ($address) {\n        $join->on('user_ext.user_id', '=', 'users.user_id');\n    })->where('user_ext.address', '=', $address);\n}\n\n# step 2.\n# use it like this\n\n$users = $this->userRepository->findAll(\n    ['user_id:gt' => 10, 'address' => 'NewYork']\n);\n\n```\n\n[home](\/?page=home)|[ÂàáÊç¢‰∏≠Êñá](\/?page=repository.zh-cn)\n\nIs it very simple? ^_^ üòú\n\nTo be continued\n",
        "repository.zh-cn": "Repository ‰ΩøÁî®ÊñáÊ°£\n==================\n\n[TOC]\n\n[ÊñáÊ°£ËØ¥Êòé](\/?page=home.zh-cn) | [change to English](\/?page=repository)\n\n`Repository` ÊòØÂØπ `laravel model` ÁöÑ‰∏Ä‰∏™Ë°•ÂÖÖÔºå‰ºòÂåñ‰∫Ü`laravel model` ÁöÑ `CURD` Êìç‰ΩúÔºå\nÂπ∂Êèê‰æõÊõ¥Â§öÁöÑÊñπÊ≥ïÔºå‰ª•ÂèäÊõ¥ÂèãÂ•ΩÁöÑÁºñËæëÂô®ÊèêÁ§∫\n\n## ‰∏Ä Â¢ûÂà†ÊîπÊü•\n\n### 1.1 Êñ∞Â¢ûÊï∞ÊçÆ `create(array $data)`\n\n```php\n\/**\n * ËøîÂõûÂÄºËØ¥Êòé\n * @param boolean $ok   true Ë°®Á§∫ÊàêÂäü\n * @param string  $msg  Êìç‰ΩúÁöÑÊèêÁ§∫‰ø°ÊÅØ\n * @param array   $data Êñ∞Â¢ûÊàêÂäüÂêéË∞ÉÁî® model->toArray() ËøîÂõûÁöÑÊï∞ÊçÆÔºå Â§±Ë¥•‰∏∫null \n *\/\nlist($ok, $msg, $data) = $this->repository->create([\n    'user_name' => 'Tony',\n    'age'       => 18,\n    'sex'       => 1,\n    'address    => 'America'\n]);\n\n```\n\n### 1.2 ÁºñËæëÊï∞ÊçÆ `update($conditions, array $data)`\n\n```php\n\/**\n * ËøîÂõûÂÄºËØ¥Êòé\n * @param boolean $ok   true Ë°®Á§∫ÊàêÂäü\n * @param string  $msg  Êìç‰ΩúÁöÑÊèêÁ§∫‰ø°ÊÅØ\n * @param int     $rows Ë°®Á§∫‰øÆÊîπÊï∞ÊçÆÊù°Êï∞\n *\/\nlist($ok, $msg, $rows) = $this->repository->update(1, ['type' => 3, 'money' => 9999]); \/\/ ‰∏ªÈîÆ‰øÆÊîπ pk = 1\n\n\/\/ $this->repository->update(['id:gt' => 10], ['type' => 3, 'money' => 9999]);  \/\/ Êù°‰ª∂‰øÆÊîπ id > 10\n\n\/\/ $this->repository->update([1, 2, 3, 4], ['type' => 3, 'money' => 9999]); \/\/ ‰∏ªÈîÆ‰øÆÊîπ pk in (1, 2, 3, 4)\n```\n\n>Â¶ÇÊûúÊòØ‰øÆÊîπÂ§öÊù°Êï∞ÊçÆÔºå‰ΩøÁî®ÁöÑÊòØÊâπÈáè‰øÆÊîπ;\nÈÄöËøá `Eloquent` ÊâßË°åÊâπÈáèÊõ¥Êñ∞Êó∂Ôºå`saved` Âíå `updated` ÁöÑÊ®°Âûã‰∫ã‰ª∂‰∏ç‰ºöË¢´Êõ¥Êñ∞ÁöÑÊ®°ÂûãËß¶Âèë„ÄÇËøôÊòØÂõ†‰∏∫ÊâßË°åÊâπÈáèÊõ¥Êñ∞Êó∂Ôºå‰∏ç‰ºöÊúâ‰ªª‰ΩïÊ®°ÂûãË¢´Ê£ÄÁ¥¢Âá∫Êù•„ÄÇ\n\n#### Â¶ÇÊûúÊòØÈÄöËøá‰∏ªÈîÆ‰øÆÊîπÂçïÊù°Êï∞ÊçÆÔºåÊòØËÉΩÂ§üÊ£ÄÁ¥¢Âá∫Ê®°ÂûãÊù•ÁöÑ\n\n1. Ê®°Âûã‰∫ã‰ª∂ËÉΩÂ§üËß¶ÂèëÔºõ`saved` Âíå `updated` ÁöÑÊ®°Âûã‰∫ã‰ª∂\n2. Ê®°ÂûãÁöÑ‰øÆÊîπÂô®ËÉΩÂ§ü‰ΩøÁî®\n\n```php\n$this->repository->update(1, ['type' => 3]);\n\n\/\/ $this->repository->update(['id' => 2, 'status' => 1], ['type' => 5]);\n```\n\n\n\n### 1.3 Âà†Èô§Êï∞ÊçÆ `delete($conditions)`\n\n```php\n\/**\n * ËøîÂõûÂÄºËØ¥Êòé\n * @param boolean $ok   true Ë°®Á§∫ÊàêÂäü\n * @param string  $msg  Êìç‰ΩúÁöÑÊèêÁ§∫‰ø°ÊÅØ\n * @param int     $rows Ë°®Á§∫Âà†Èô§Êï∞ÊçÆÊù°Êï∞\n *\/\nlist($ok, $msg, $rows) = $this->repository->delete(1); \/\/ ‰∏ªÈîÆÂà†Èô§ pk = 1\n\n\/\/ $this->repository->delete(['id:gt' => 10]);  \/\/ Êù°‰ª∂Âà†Èô§ id > 10\n\n\/\/ $this->>repository->delete([1, 2, 3, 4, 5]); \/\/ ‰∏ªÈîÆÂà†Èô§ pk in (1, 2, 3, 4)\n``` \n\n### 1.4 Êü•ËØ¢Êï∞ÊçÆ\n\n#### 1.4.1 Êü•ËØ¢ÂçïÊù°Êï∞ÊçÆ\n\n1. Êü•ËØ¢ÂçïÊù°Êï∞ÊçÆ find($conditions, $columns = [])\n\n    ```php\n    $item = $this->repository->find(1);  \/\/ ‰∏ªÈîÆÊü•ËØ¢ pk = 1\n    ```\n\n2. Êü•ËØ¢Âçï‰∏™Â≠óÊÆµ findBy($conditions, $column)\n\n    ```php\n    $name = $this->repository->findBy(1, 'name'); \/\/ Êü•Êüê‰∏™Â≠óÊÆµ\n    ```\n\n#### 1.4.2 Êü•ËØ¢Â§öÊù°Êï∞ÊçÆ\n\n1. Êü•ËØ¢Â§öÊù°Êï∞ÊçÆ findAll($conditions, $columns = [])\n\n    ```php\n    $items = $this->repository->findAll([1, 2, 3, 4]); \/\/ ‰∏ªÈîÆÊü•ËØ¢ pk in (1, 2, 3, 4)\n    ```\n\n2. Êü•ËØ¢Â§öÊù°Êï∞ÊçÆÁöÑÂçï‰∏™Â≠óÊÆµ findAllBy($conditions, $column)\n\n    ```php\n    $usernames = $this->repository->findAllBy([1, 2, 3], 'username'); \/\/ Êü•ËØ¢Êüê‰∏™Â≠óÊÆµÁöÑÊâÄÊúâÂÄº\n    ```\n\n#### 1.4.3 ÂàÜÈ°µÊü•ËØ¢\n\nÂàÜÈ°µÊü•ËØ¢ paginate($conditions = [], $columns = [], $size = 10, $current = null)\n\n```php\n$list = $this->repository->paginate(['status' => 1], ['id', 'name', ...]);\n```\n\n#### 1.4.4 ‰ΩøÁî®`findWhere(array $where, array $columns = [])`ÊûÑÂª∫Â§çÊùÇÁöÑÊü•ËØ¢\n\n```php\n    $users = $this->userRepository->findWhere([\n        'and',\n        ['or', ['username:auto_like' => 'test'], ['nick_name', 'like', '%test%']],\n        ['level' => 5],\n        ['status', '=', 1],\n    ])->get();\n```\n\n‰∏äÈù¢Êü•ËØ¢ÁîüÊàêÁöÑSQl\n\n```sql\nselect * from `users` where (\n    (`users`.`username` like '%test%' or `users`.`nick_name` like '%test%') \n    and `users`.`level` = 5 \n    and `users`.`status` = 1\n)\n```\n\n##### 1.4.4.1 ‰ΩøÁî®ËØ¥Êòé\n- Âè™ËÉΩ‰ΩøÁî®Êï∞ÁªÑÊü•ËØ¢\n- Êï∞ÁªÑÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÁ°ÆÂÆöÊï∞ÁªÑ‰∏≠ÂÖ∂‰ªñÊü•ËØ¢Êù°‰ª∂ÁöÑËøûÊé•ÊñπÂºè `and` Êàñ `or`Ôºõ `and`ÂèØ‰ª•ÂøΩÊÇ†‰∏çÂÜô\n\n    ```php\n    $where = [\n        \/\/ Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÊòØ and Êü•ËØ¢ÔºåÂèØ‰ª•‰∏çÁî®ÂÜô\n        ['level' => 5],\n        ['status' => 1],\n        [\n            \/\/ or Ë°®Á§∫ Êï∞ÁªÑ‰∏≠Ôºå‰∏ãÈù¢Êü•ËØ¢Êù°‰ª∂‰ΩøÁî® or ËøûÊé• \n            'or', \n            ['username' => 'test'], \n            ['name' => 'test123']\n        ],\n    ];\n    ```\n- Êï∞ÁªÑ‰∏≠ÁöÑÊü•ËØ¢Êù°‰ª∂ÔºåÂøÖÈ°ª‰ΩøÁî®Êï∞ÁªÑÊñπÂºè \n    - `['Â≠óÊÆµ', 'Ë°®ËææÂºè', 'Êü•ËØ¢ÂÄº']` \n    - `['Â≠óÊÆµ:Ë°®ËææÂºè' => 'Êü•ËØ¢ÂÄº']` \n    - `['Â≠óÊÆµ' => 'Êü•ËØ¢ÂÄº']`\n    \n    >Âª∫ËÆÆ‰ΩøÁî®`['Â≠óÊÆµ', 'Ë°®ËææÂºè', 'Êü•ËØ¢ÂÄº']` ÊØîËæÉÁõ¥ËßÇ\n    \n### 1.5 Êü•ËØ¢ËøõÈò∂‰ΩøÁî®\n\n#### 1.5.1 ‰ΩøÁî®Ë°®ËææÂºèÊü•ËØ¢\n\n> ‰ΩøÁî®ÊñπÂºè\n\n`Â≠óÊÆµ`:`Ë°®ËææÂºè` => `ÂØπÂ∫îÊü•ËØ¢ÁöÑÂÄº`\n\n‰æãÂ¶Ç:\n\n```php\n\n$items = $this->repository->findAll([\n    'id:neq'    => 1,\n    'name:like' => '%test%'\n]);\n\n\/\/ ÂØπÂ∫îÁîüÊàêÁöÑsql: `id` != 1 and `name` like '%test%' \n```\n\n##### 1.5.1.1  ÁõÆÂâçÊîØÊåÅÁöÑË°®ËææÂºè\n\n| Ë°®ËææÂºè | Âê´‰πâ | ÁâπÂà´ËØ¥Êòé |\n|:------|:--------------|:-----|\n| eq    | Á≠â‰∫é(=)      | |\n| neq   | ‰∏çÁ≠â‰∫é(!=)   | |\n| ne    | ‰∏çÁ≠â‰∫é(!=)   | |\n| gt    | Â§ß‰∫é(>)      | |\n| egt    | Â§ß‰∫éÁ≠â‰∫é(>=) | |\n| gte    | Â§ß‰∫éÁ≠â‰∫é(>=) | |\n| ge     | Â§ß‰∫éÁ≠â‰∫é(>=) | |\n| lt     | Â∞è‰∫é(<)      | |\n| le     | Â∞è‰∫éÁ≠â‰∫é(<=)  | |\n| lte    | Â∞è‰∫éÁ≠â‰∫é(<=)  | |\n| elt    | Â∞è‰∫éÁ≠â‰∫é(<=)  | |\n| in     | IN Êü•ËØ¢      | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| not in | NOT IN Êü•ËØ¢  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| not_in | NOT IN Êü•ËØ¢  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| between| Âå∫Èó¥Êü•ËØ¢(between)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| not_between| ‰∏çÂú®Âå∫Èó¥Êü•ËØ¢(not between)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| not between| ‰∏çÂú®Âå∫Èó¥Êü•ËØ¢(not between)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Êï∞ÁªÑ| \n| like   | Ê®°Á≥äÊü•ËØ¢ÂåÖÂê´(like)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Â≠óÁ¨¶‰∏≤ | \n| not_like   | Ê®°Á≥äÊü•ËØ¢‰∏çÂåÖÂê´(not like)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Â≠óÁ¨¶‰∏≤ | \n| not like   | Ê®°Á≥äÊü•ËØ¢‰∏çÂåÖÂê´(not like)  | ‰º†ÂÖ•Êï∞ÊçÆ‰ºöÂº∫ËΩ¨‰∏∫Â≠óÁ¨¶‰∏≤ | \n| rlike      | Ê®°Á≥äÊü•ËØ¢ÂåÖÂê´(rlike)   |  | \n| <>         | ‰∏çÁ≠â‰∫é(<>)            |  | \n| auto_like  | Ê®°Á≥äÊü•ËØ¢(like)        | ‰ºöËá™Âä®Âà§Êñ≠Ê∑ªÂä† % Ê®°Á≥äÊü•ËØ¢\n\n##### 1.5.1.2 ÂÖ≥‰∫é `auto_like` Êü•ËØ¢ËØ¥Êòé\n\n```php\n\/\/ Ê≤°ÊúâÊ∑ªÂä†ÂâçÂêéÊ®°Á≥äÊü•ËØ¢Ôºå‰ºöËá™Âä®Âä†‰∏ä username like '%test%'\n$this->repository->findAll(['username:auto_like' => 'test']); \n\n\/\/ Ê∑ªÂä†‰∫ÜÂâçÁºÄÊàñËÄÖÂêéÁºÄÊ®°Á≥äÊü•ËØ¢ÔºåÈÇ£‰πà‰∏çÂ§ÑÁêÜ username like 'test%'\n$this->repository->findAll(['username:auto_like' => 'test%']);\n\n```\n\n##### 1.5.1.3 ‰Ω†ÂèØ‰ª•ÂÉè‰∏ãÈù¢ËøôÊ†∑‰ΩøÁî®Ë°®ËææÂºè:\n\n```php\n\/\/ Êü•ËØ¢Â§ß‰∫é10ÁöÑË¥¶Âè∑\n$this->repository->findAll(['id:gt' => 10]);\n\n\/\/ Êü•ËØ¢‰∏çÁ≠â‰∫é10ÁöÑË¥¶Âè∑\n$this->repository->findAll(['id:neq' => 10]);\n\n\/\/ Êü•ËØ¢idÊòØ1,2,3,4,5ÁöÑËøô‰∫õÊï∞ÊçÆ\n$this->repository->findAll(['id:in' => [1, 2, 3, 4, 5]);\n\/\/ or\n$this->repository->findAll(['id' => [1, 2, 3, 4, 5]])\n\n\/\/ Êü•ËØ¢ÂàõÂª∫Êó∂Èó¥Âú®2019Âπ¥ÁöÑÊï∞ÊçÆ\n$this->repository->findAll(['created_at:between' => \n    [\n        '2019-01-01 00:00:00', \n        '2020-01-01 00:00:00',\n    ]\n]);\n``` \n\n##### 1.5.1.4 Â¶ÇÊûú‰Ω†ËÆ∞‰∏ç‰ΩèË°®ËææÂºè,ÈÇ£‰πà‰Ω†ÂêåÊ†∑ÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®Êìç‰ΩúÁ¨¶Êü•ËØ¢‰πüÊòØ‰∏ÄÊ†∑ÁöÑ\n\n```php\n$item = $this->repository->findAll([\n    'id:!='         => 2,\n    'username:like' => '%test%',\n    'status:>='     => 4,\n])\n```\n\n**ÂêåÊ†∑ÊòØ Êü•ËØ¢Â≠óÊÆµ:Êìç‰ΩúÁ¨¶ => 'Êü•ËØ¢ÁöÑÂÄº'**\n\n##### 1.5.1.5 ÂÖ∂‰ªñËØ¥Êòé\n\n`update` Âíå `create` ÊñπÊ≥ïÂêåÊ†∑ÊîØÊåÅË°®ËææÂºèÊü•ËØ¢ÔºåÈÉΩÊòØ‰ΩøÁî®`findCondition($condiitons)` ÊñπÊ≥ïÂ§ÑÁêÜ\n\n1. [update ÁöÑ‰ΩøÁî®ËØ¥Êòé](#12-ÁºñËæëÊï∞ÊçÆ-updateconditions-array-data)\n2. [delete ÁöÑ‰ΩøÁî®ËØ¥Êòé](#13-Âà†Èô§Êï∞ÊçÆ-deleteconditions)\n\n#### 1.5.2 ‰ΩøÁî® `model` ÁöÑ `scope` Êü•ËØ¢\n\n>‰∏æ‰∏™üå∞Ê†óÂ≠ê,‰Ω†Êúâ‰∏ÄÂº†Áî®Êà∑Ë°® users, Áî®Êà∑Ë°®ÁöÑÊâ©Â±ï‰ø°ÊÅØÂ≠òÂú® user_ext Èáå;\nÁé∞Âú®‰Ω†ÊÉ≥Êü•ËØ¢Áî®Êà∑Âú∞ÂùÄÂú®ÊåáÂÆö‰ΩçÁΩÆ‰ø°ÊÅØÁöÑÊâÄÊúâÁî®Êà∑‰ø°ÊÅØ, ÈÇ£‰πàÂ∞±ÈúÄË¶Å‰ΩøÁî®`scope` Êü•ËØ¢‰∫Ü\n\nË¶ÅÊ±ÇmodelÂÆö‰πâ‰∫Ü`scope`Êü•ËØ¢\n\n##### 1. model \n\n```php\n\nclass User extends Model\n{\n    protected $table      = 'users';\n    protected $primaryKey = 'user_id';\n    public    $columns    = [\n        'user_id',\n        'username',\n        \/\/...\n        'created_at',\n        'updated_at',\n    ];\n \n  \n    \/**\n     * ÂÆö‰πâÂÖ≥ËÅîÊâ©Â±ï‰ø°ÊÅØ\n     * \n     * return Illuminate\\Database\\Eloquent\\Relations\\HasOne\n     *\/\n    public function extInfo()\n    {\n      return $this->hasOne(UserExt::class, 'user_id', 'user_id');\n    }\n \n\n    \/**\n     * Ê†πÊçÆÂú∞ÂùÄÊü•ËØ¢\n     *\n     * @param \\Illuminate\\Database\\Eloquent\\Builder $query   Êü•ËØ¢ÂØπË±°\n     * @param string                                $address Âú∞ÂùÄ‰ø°ÊÅØ\n     * @return \\Illuminate\\Database\\Eloquent\\Builder\n     *\/\n    public function scopeAddress($query, $address)\n    {\n        return $query->leftJoin('user_ext', 'user_ext.user_id', '=', 'users.user_id')\n            ->where('user_ext.address', '=', $address);\n    }\n}   \n\n```\n\n##### 2. ‰ΩøÁî® `repository` Êü•ËØ¢\n\n```php\n\n$this->userRepositoy->findAll([\n    'status'  => 1,\n    'address' => 'Âåó‰∫¨'\n]);\n\n```\n\n##### 3. Êü•ËØ¢ÁöÑSQL\n\n```sql\n\nselect \n    * \nfrom \n    `users` \nleft join \n    `user_ext` on (`user_ext`.`user_id` = `users`.`user_id`) \nwhere \n    `users.status` = 1 and `user_ext`.`address` = 'Âåó‰∫¨'\n    \n```\n##### 4 ‰ΩøÁî®ËØ¥Êòé\n\n‰ªé‰∏äÈù¢ÁöÑSQLÂíåÂÆπÊòìÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢òÔºåÊ≤°ÊúâÊåáÂÆöÊü•ËØ¢Â≠óÊÆµÔºåÈªòËÆ§Êü•ËØ¢ÁöÑ `*` ÊâÄÊúâÂ≠óÊÆµÔºåÂ¶ÇÊûú`users`Ë°®Âíå`user_ext`\nË°®ÁöÑÂ≠óÊÆµÊ≤°ÊúâÂÜ≤Á™ÅÔºåÈÇ£‰πàÊ≤°Êúâ‰ªÄ‰πàÈóÆÈ¢òÔºå‰ΩÜÂ¶ÇÊûúÊúâÂÜ≤Á™ÅÔºåÈÇ£‰πàÊü•ËØ¢Âá∫Êù•ÁöÑÊï∞ÊçÆÂèØËÉΩÂíå‰Ω†ÊÉ≥Ë±°ÁöÑ‰∏ç‰∏ÄÊ†∑ÔºåÁâπÂà´Âú®ËøòÊúâ\nÂÖ≥ËÅîÊü•ËØ¢ÁöÑÊó∂ÂÄôÔºåËøô‰∏™ÈóÆÈ¢òÊõ¥ÂÆπÊòìÂá∏ÊòæÂá∫Êù•ÔºåÊâÄ‰ª•Âª∫ËÆÆÂú®ÊúâËøûË°®Êü•ËØ¢ÁöÑÊó∂ÂÄôÔºåÊúÄÂ•ΩÊúâÂä†‰∏ä‰Ω†ÈúÄË¶ÅÊü•ËØ¢ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ\n\n```php\n$this->userRepository->findAll([\n    'status'  => 1,\n    'address' => 'Âåó‰∫¨',\n], ['users.*'])\n```\n\n#### 1.5.4 Ëé∑Âèñ `model` ÁöÑ `relation` ÂÖ≥ËÅîÊï∞ÊçÆ‰ø°ÊÅØ\n\nÂΩìÊàë‰ª¨Êü•ËØ¢Êï∞ÊçÆÊó∂ÂÄôÔºå‰πüÊÉ≥ÊääÂÖ≥ËÅîÊï∞ÊçÆÊü•ËØ¢Âá∫Êù•ÁöÑÊó∂ÂÄôÔºåÂ∞±‰ºöÁî®Âà∞ÂÖ≥ËÅîÊü•ËØ¢\n\n‰ΩøÁî®ÁöÑÊòØ`model`ÁöÑ`with`ÊñπÊ≥ï\n\n>‰∏æ‰∏™üå∞Ê†óÂ≠ê,‰Ω†Êúâ‰∏ÄÂº†Áî®Êà∑Ë°®users,Áî®Êà∑Ë°®ÁöÑÊâ©Â±ï‰ø°ÊÅØÂ≠òÂú®user_extÈáå \n‰πüËÆ∏‰Ω†ÊÉ≥Êü•ËØ¢Áî®Êà∑‰ø°ÊÅØÁöÑÊó∂ÂÄôÂêåÊó∂Êü•Âá∫Áî®Êà∑ÁöÑÊâ©Â±ï‰ø°ÊÅØ\n\nË¶ÅÊ±Ç`model`ÂÆö‰πâ‰∫ÜÂÖ≥ËÅî\n\n`model` ‰ΩøÁî®‰∏äÈù¢ÂÆö‰πâÁöÑ [`User`](#152-‰ΩøÁî®-model-ÁöÑ-scope-Êü•ËØ¢)\n\n1. ‰ΩøÁî® `repository` Ëé∑ÂèñÂÖ≥ËÅîÊï∞ÊçÆ‰ø°ÊÅØ, ÈÄöËøáÊü•ËØ¢Â≠óÊÆµÔºåËá™Âä®Â§ÑÁêÜÂÖ≥ËÅî\n\n    Êü•ËØ¢Â≠óÊÆµ‰∏≠Ê∑ªÂä† `ÂÖ≥ËÅîÂÖ≥Á≥ª` => [`ÂÖ≥ËÅîÊü•ËØ¢ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ`]\n    \n    ```php\n        $users = $this->repository->findAll(['status' => 1], ['*', 'extInfo' => ['*']]);\n    ```\n\n2. Êü•ËØ¢SQL \n\n    [ËøôÈáå‰ΩøÁî®È¢ÑÂä†ËΩΩÊï∞ÊçÆ](https:\/\/learnku.com\/docs\/laravel\/5.5\/eloquent-relationships\/1333#012e7e), ÈÅøÂÖçN+1ÈóÆÈ¢ò\n\n    ```sql\n    select * from `users` where `users`.`status` = 1\n    \n    select * from `user_ext` where `user_id` in (1, 2, 3, 4)\n    ```\n\n3. Êï∞ÊçÆ‰ø°ÊÅØ\n\n    ![ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/relation.png 'ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ')\n\n##### 1.5.4.1\n    \n1. ‰∏äÈù¢Êúâ‰∏™Â∞èÁöÑÈóÆÈ¢òÔºå`model`ÂÆö‰πâÁöÑÂÖ≥ËÅîÂêçÁß∞‰∏∫`extInfo`, ‰ΩÜÊòØÂá∫Êù•Êï∞ÁªÑÂØπÂ∫îÁöÑÂ≠óÊÆµ‰ø°ÊÅØ‰∏∫\n `ext_info` , Âπ∂‰∏îÊü•ËØ¢ÊåáÂÆöÂ≠óÊÆµ‰ø°ÊÅØ‰πüÊòØ‰∏∫`extInfo` (`'extInfo' => ['*']`), Êü•ËØ¢\n Âá∫Êù•ÁöÑÊï∞ÊçÆÊòØ`laravel` `model` ÁöÑ `toArray()` ÊñπÊ≥ïÂ§ÑÁêÜÁöÑÁªìÊûú,‰ºöÂ∞Ü`Â∞èÈ©ºÂ≥∞`ÂëΩÂêçÁöÑ\n ÂÖ≥ËÅî‰ø°ÊÅØËΩ¨‰∏∫`ËõáÂΩ¢`ÂëΩÂêçÂ≠óÊÆµÔºå`repository`Êü•ËØ¢Â≠óÊÆµÊîØÊåÅ`Â∞èÈ©ºÂ≥∞`Âíå`ËõáÂΩ¢`ÂëΩÂêçÔºå‰æãÂ¶ÇÔºö\n     \n     ```php\n        $users = $this->repository->findAll(['status' => 1], ['*', 'ext_info' => ['*]])\n     ``` \n       \n     Âíå‰∏äÈù¢ÁöÑÁªìÊûúÊòØ‰∏ÄËá¥ÁöÑÔºå‰∏∫‰∫ÜÊõ¥Â•ΩÁöÑ‰∏ÄËá¥ÊÄßÔºåÂª∫ËÆÆ`model`Âú®ÂÆö‰πâËÅîÊü•ËØ¢ÂëΩÂêçÁöÑÊó∂ÂÄôÔºå‰ΩøÁî®Âçï‰∏™ÂçïËØçÁöÑÂçïÂ§çÊï∞ÂΩ¢ÂºèÊØîËæÉÂ•Ω\n\n2. Âú®Êü•ËØ¢Êó∂ÂÄôÊåáÂÆöÂ≠óÊÆµÔºåÂπ∂‰∏îÊåáÂÆöÊü•ËØ¢ÂÖ≥ËÅîÊü•ËØ¢Â≠óÊÆµ\n\n    ```php\n    $users = $this->userRepository->findAll(['status' => 1], ['username', 'extInfo' => ['address']]);\n    ```    \n   \n   ‰∏äÈù¢Êü•ËØ¢ÊåáÂÆö‰∫ÜÊü•ËØ¢ÁöÑÂ≠óÊÆµÔºå‰ΩÜÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÊ≤°ÊúâÊåáÂÆöÂá∫ÂÖ≥ËÅîË°®Êü•ËØ¢ÈúÄË¶ÅÁöÑÂ≠óÊÆµ `user_id` Â≠óÊÆµ‰ø°ÊÅØÔºå‰ºöÂØºËá¥ÂÖ≥ËÅî‰ø°ÊÅØÂÖ≥ËÅî‰∏ç‰∏äÁöÑÈóÆÈ¢ò\n   **‰ΩÜ`repository`Ëß£ÂÜ≥‰∫ÜËøô‰∏™ÈóÆÈ¢òÔºå‰ºöËá™Âä®Âä†‰∏äÂÖ≥ËÅîÊü•ËØ¢ÈúÄË¶ÅÁöÑÂ≠óÊÆµ‰ø°ÊÅØ**ÔºåÊâÄ‰ª•ÊúÄÁªàÊü•ËØ¢ÁöÑSQLÂíåÊï∞ÊçÆÂ¶Ç‰∏ã:\n   \n   ![ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/relation-1.png 'ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ')\n   \n   >ËøôÂèØËÉΩ‰ºöËÆ©‰∫∫ËÆ§‰∏∫ÊàëÊòéÊòéÂè™Êü•ËØ¢‰∫Ü`username`Â≠óÊÆµÔºåÊÄé‰πàËøòÊü•Âá∫‰∫ÜÂÖ∂‰ªñÂ≠óÊÆµ‰ø°ÊÅØ\n   \n   **Âè™ÊúâÂú®ÂÖ≥ËÅîÊü•ËØ¢ÁöÑÊó∂ÂÄôÔºåÊ≤°ÊúâÊåáÂÆöÊü•ËØ¢ÂÖ≥ËÅîÂ≠óÊÆµÔºåÊâç‰ºöËá™Âä®Âä†‰∏äÂÖ≥ËÅîÂ≠óÊÆµ**\n   \n#### 1.5.5 Ëé∑Âèñ `model` ÁöÑ `relation` ÂÖ≥ËÅîÁªüËÆ°Êï∞ÊçÆ‰ø°ÊÅØ\n\nËøô‰∏™ÂäüËÉΩÊØîËæÉÈÄÇÂêà‰∏ÄÂØπÂ§öÁöÑÊó∂ÂÄôÔºåÊàëÊÉ≥Áü•ÈÅìÂÖ≥ËÅîÁöÑÂÖ∂‰ªñ‰ø°ÊÅØÊúâÂ§öÂ∞ë\n\nÂè™Ë¶ÅÂÆö‰πâ‰∫Ü`model`ÁöÑÂÖ≥ËÅî‰ø°ÊÅØÔºåÂ∞±ÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®‰∫ÜÔºåÂÖ∂ÂÆûÂ∞±ÊòØ `model` ÁöÑ `withCount`\n\n>`model`ÂÆö‰πâÁöÑ`ÂÖ≥ËÅîÊñπÊ≥ïÂêçÁß∞_count`\n\n`model` ‰ΩøÁî®‰∏äÈù¢ÂÆö‰πâÁöÑ [`User`](#152-‰ΩøÁî®-model-ÁöÑ-scope-Êü•ËØ¢)\n\n```php\n$user = $this->repositoy->find(['status' => 1], ['id', 'username', 'extInfo_count']);\n```\n\nÊâßË°åSQL‰ª•ÂèäÊï∞ÊçÆ\n\n![ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ](https:\/\/wanchaochao.github.io\/laravel-repository\/docs\/images\/relation-2.png 'ÂÖ≥ËÅîÁöÑÊï∞ÊçÆ')\n\n#### 1.5.6 Áªô `model` ÁöÑ `relation` ÂÖ≥ËÅîÊü•ËØ¢Âä®ÊÄÅÊ∑ªÂä†Êü•ËØ¢Êù°‰ª∂\n\nÊü•ËØ¢Êù°‰ª∂‰∏≠Ê∑ªÂä† `modelÂÆö‰πâÂÖ≥ËÅîÊñπÊ≥ïÂêçÁß∞.Â≠óÊÆµ` => 'Êü•ËØ¢ÁöÑÂÄº'\n\n`model` ‰ΩøÁî®‰∏äÈù¢ÂÆö‰πâÁöÑ [`User`](#152-‰ΩøÁî®-model-ÁöÑ-scope-Êü•ËØ¢)\n\n‰æãÂ¶ÇÔºö\n\n```php\n\n$users = $this->repository->findAll([\n    'status'                => 1,\n    'extInfo.address'       => 'Âåó‰∫¨',\n    'extInfo.created_at:gt' => '2019-02-01 00:00:00', \/\/ ÂêåÊ†∑ÊîØÊåÅË°®ËææÂºèÊü•ËØ¢\n], ['extInfo' => ['*']])\n\n```\nÊâßË°åÁöÑSQLÔºö\n```sql\nselect * from `users` where `users`.`status` = 1\n\nselect * from `user_ext` where \n    `user_ext`.`address` = 'Âåó‰∫¨' and \n    `user_ext`.`created_at` > '2019-02-01 00:00:00' and \n    `user_ext`.`user_id` in (1, 2, 3, 4)\n```\n\n##### 1.5.6.1 model ‰πüÂèØ‰ª•ÂÆö‰πâÈªòËÆ§ÂÖ≥ËÅîÁöÑÊü•ËØ¢Êù°‰ª∂\n\nÈúÄË¶ÅÂú®`model`ÈáåÈù¢ÂÆö‰πâ `ÂÖ≥ËÅîÊñπÊ≥ïÂêçÁß∞Filters` ÁöÑÂ±ûÊÄß‰ø°ÊÅØ\n\n```php\n    class User extends Model\n    {\n        protected $table      = 'users';\n        protected $primaryKey = 'user_id';\n        public    $columns    = [\n            'user_id',\n            'username',\n            \/\/...\n            'created_at',\n            'updated_at',\n        ];\n        \n        \/**\n         * ‰∏∫ÂÖ≥ËÅîÂÆö‰πâÈªòËÆ§Êü•ËØ¢Êù°‰ª∂\n         *\n         * @var array\n         *\/\n        public $extInfoFilters = [\n            'address' => 'Âåó‰∫¨', \n            \/\/ 'ddress:like' => 'Âåó‰∫¨', \/\/ ÂÖÅËÆ∏‰ΩøÁî®Ë°®ËææÂºèÊñπÂºè\n        ];\n     \n        \/**\n         * ÂÆö‰πâÂÖ≥ËÅîÊâ©Â±ï‰ø°ÊÅØ\n         * \n         * return Illuminate\\Database\\Eloquent\\Relations\\HasOne\n         *\/\n        public function extInfo()\n        {\n          return $this->hasOne(UserExt::class, 'user_id', 'user_id');\n        }\n     \n    \n        \/**\n         * Ê†πÊçÆÂú∞ÂùÄÊü•ËØ¢\n         *\n         * @param \\Illuminate\\Database\\Eloquent\\Builder $query   Êü•ËØ¢ÂØπË±°\n         * @param string                                $address Âú∞ÂùÄ‰ø°ÊÅØ\n         * @return \\Illuminate\\Database\\Eloquent\\Builder\n         *\/\n        public function scopeAddress($query, $address)\n        {\n            return $query->leftJoin('user_ext', 'user_ext.user_id', '=', 'users.user_id')\n                ->where('user_ext.address', '=', $address);\n        }\n    }   \n```\n  \nËØ¥ÊòéÔºö ÂÖ≥ËÅîÊü•ËØ¢„ÄÅÁªüËÆ°Êü•ËØ¢ÈÉΩ‰ºöÊ∑ªÂä†ÈªòËÆ§ÂÖ≥ËÅîÊü•ËØ¢Êù°‰ª∂\n\n‰ΩøÁî®ÂÆö‰πâ‰∫ÜÈªòËÆ§ÂÖ≥ËÅîÊü•ËØ¢Êù°‰ª∂ËøõË°åÊü•ËØ¢\n\n```php\n$users = $this->repository->findAll(['status' => 1], ['extInfo' => ['*']])\n```\n\nÊâßË°åÁöÑSQLÔºö\n\n```sql\nselect * from `users` where `users`.`status` = 1\n\nselect * from `user_ext` where \n    `user_ext`.`address` = 'Âåó‰∫¨' \n    `user_ext`.`user_id` in (1, 2, 3, 4)\n```\n\n**ÈªòËÆ§ÂÖ≥ËÅîÊü•ËØ¢Êù°‰ª∂ÂíåÂä®ÊÄÅÂÖ≥ËÅîÊü•ËØ¢Êù°‰ª∂ÊòØÂè†Âä†ÁöÑ**\n\n#### 1.5.7 ËøáÊª§Á©∫ÂÄºÊü•ËØ¢\n\n**Á©∫Â≠óÁ¨¶‰∏≤„ÄÅÁ©∫Êï∞ÁªÑ„ÄÅnull‰ºöË¢´ËÆ§‰∏∫Á©∫ÂÄº**\n\n1. Êü•ËØ¢Âçï‰∏™ filterFind($conditions, $columns = [])\n\n    ```php\n    $item = $this->repositpry->filterFind([\n        'username:like' => request()->input('username'),\n        'status'        => request()->input('status')\n    ]);\n    ```\n\n2. Êü•ËØ¢Â§ö‰∏™ filterFindAll($conditions, $columns = [])\n\n    ```php\n    $items = $this->repositpry->filterFindAll([\n        'username:like' => request()->input('username'),\n        'status'        => request()->input('status')\n    ]);\n    ```\n3. Ëé∑ÂèñËøáÊª§Á©∫ÂÄºÊü•ËØ¢ÁöÑmodel getFilterModel($conditions, $columns = [])\n\n    ```php\n    $model = $this->repositpry->getFilterModel([\n        'username:like' => request()->input('username'),\n        'status'        => request()->input('status')\n    ]);\n    ```\n    \n>ËøôÂá†‰∏™ÊñπÊ≥ïÔºåÁõ∏ÂΩì‰∫é [when Êù°‰ª∂Êü•ËØ¢](https:\/\/learnku.com\/docs\/laravel\/5.5\/queries\/1327#conditional-clauses)\nÂú®ÂíåÂâçÁ´Ø‰∫§‰∫íÊó∂Ôºå‰∏çÁ°ÆÂÆöÂâçÁ´ØÊòØÂê¶‰º†ÈÄíÂÄºÊù•ËøõË°åÊü•ËØ¢Êó∂ÂÄôÔºåÊØîËæÉÊñπ‰æø\n\n```php\n\/\/ Âπ≥Êó∂ÂÜôÊ≥ï\n$conditions = [];\n\nif ($username = request()->input('username')) {\n    $conditions['username:like'] = $username;\n}\n\nif ($status = request()->input('status')) {\n    $conditions['status'] = $status;\n}\n\n$items = $this->repository->findAll($conditions);\n\n\/\/ ‰ΩøÁî® filter ËøáÊª§Êü•ËØ¢\n$items = $this->repositpry->filterFindAll([\n    'username:like' => request()->input('username'),\n    'status'        => request()->input('status')\n]);\n```\n\n#### 1.5.8 ‰ΩøÁî® `findWhere` ÊûÑÂª∫Â§çÊùÇÊü•ËØ¢\n\n> `findWhere(array $where, $array $columns = [])`\n\n```php\n$this->userRespository->findWhere([\n    'and',\n    ['username' => 1, 'name:like' => '%test%'],\n    ['or', ['level' => 10, 'level:eq' => 5]],\n    ['and', ['status' => 1, 'age' => 1]],   \n])->get();\n\n```\n\nÊâßË°åÁöÑSQL\n\n```sql\nselect * from `users` where \n    (`username` = 1 and `name` like '%test%') and \n    (`level` = 10 or `level` = 5) and \n    (`status` = 1 and `age` = 1)\n```\n\n`where`Êü•ËØ¢Êù°‰ª∂ËØ¥Êòé\n\nÊï∞ÁªÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÂÆö‰πâÊü•ËØ¢Êù°‰ª∂ËøûÊé•ÊñπÂºè(ÂêéÈù¢Êï∞ÁªÑÁöÑÊü•ËØ¢Êù°‰ª∂ÊÄé‰πàËøûÊé•`or` ÊàñËÄÖ `and`)ÔºåÂ¶ÇÊûúÊòØ`and`ËøûÊé•\nÂèØ‰ª•ÂøΩÁï•‰∏çÂÜô,‰∏ÄÂÆöË¶ÅÊòØÂ§öÁª¥Êï∞ÁªÑ\n\nÁ¨¨‰∏Ä‰∏™`and`ÂøΩÁï•‰∏çÂÜô\n```php\n$where = [\n['status' => 1]Ôºå\n['name' => 2]\n];\n\n\/\/ where `status` = 1 and `name` = 2 \n```\n\n‰ΩøÁî® `or` ËøûÊé•\n```php\n$where = [\n    \/\/ or ÂÆö‰πâ ÂêéÈù¢ÁöÑÊü•ËØ¢Êù°‰ª∂ ÈÄöËøá or ËøûÊé•\n    'or',\n    ['status' => 1],\n    ['age' => 1],\n    \n    \/\/ and ÂÆö‰πâÊï∞ÁªÑÈáåÈù¢ÂêéÈù¢ÁöÑÊü•ËØ¢Êù°‰ª∂‰ΩøÁî® and ËøûÊé•\n    ['and', ['name', '=', 123], ['username', 'like', 'test']],\n];\n\n\/\/ where `status` = 1 or `age` = 1 or (`name` = 123 and `username` like 'test')\n```\n\n## ‰∫å ÂÖ≥‰∫éÊü•ËØ¢‰∏≠ÁöÑ`$conditions`Âíå`$columns`‰ø°ÊÅØËØ¥Êòé\n\n>`$conditions`‰∏∫`sql`Êü•ËØ¢ÂÆö‰πâÊü•ËØ¢Êù°‰ª∂Ôºå`$columns`‰∏∫`sql`ÁöÑ`select`Ê∑ªÂä†ÊåáÂÆöÁöÑÊü•ËØ¢Â≠óÊÆµ\n\n### 2.1 `$conditions` Êü•ËØ¢Êù°‰ª∂\n\n1. ÊîØÊåÅÂ≠óÊÆµÁ≤æÂáÜÊü•ËØ¢(Ë°®‰∏≠Â≠óÊÆµÁöÑÊü•ËØ¢)\n2. È¢ÑÂÆöÊúâÂ≠óÊÆµÊü•ËØ¢[ÂèÇËÄÉ](#211-È¢ÑÂÆö‰πâÁöÑÂ≠óÊÆµ)\n3. ÊîØÊåÅË°®ËææÂºèÊü•ËØ¢[ÂèÇËÄÉ](#15-Êü•ËØ¢ËøõÈò∂‰ΩøÁî®)\n4. ÊîØÊåÅÂÖ≥ËÅîÊù°‰ª∂Êü•ËØ¢[ÂèÇËÄÉ](#156-Áªô-model-ÁöÑ-relation-ÂÖ≥ËÅîÊü•ËØ¢Âä®ÊÄÅÊ∑ªÂä†Êü•ËØ¢Êù°‰ª∂)\n5. ÊîØÊåÅ`model`ÁöÑ`scope`[ÂèÇËÄÉ](#152-‰ΩøÁî®-model-ÁöÑ-scope-Êü•ËØ¢)\n\n‰æãÂ¶ÇÔºö\n\n```php\n$conditions = [\n    \/\/ Ë°®‰∏≠Â≠óÊÆµÁ≤æÂáÜÊü•ËØ¢\n    'status' => 1,\n    'id'     => [1, 2, 3, 4], \/\/ ÂÄº‰∏∫Êï∞ÁªÑ‰ºöËá™Âä®ËΩ¨‰∏∫inÊü•ËØ¢ `id` in (1, 2, 3, 4)\n    \n    \/\/ È¢ÑÂÆö‰πâÂ≠óÊÆµÊü•ËØ¢\n    'order' => 'id desc' \/\/ ÊåáÂÆöÊéíÂ∫èÂ≠óÊÆµÂíåÊñπÂºè\n    'limit' => 10,       \/\/ ÈôêÂà∂Êü•ËØ¢Êù°‰ª∂\n    'group' => 'id',     \/\/ ÊåáÂÆöÂàÜÁªÑÊù°‰ª∂\n    ...\n    \n    \/\/ Ë°®ËææÂºèÊü•ËØ¢\n    'username:like'      => 'test',                                         \/\/ Ê®°Á≥äÊü•ËØ¢\n    'created_at:between' => ['2019-01-02 00:00:00', '2019-01-03 23:59:59'], \/\/ Âå∫Èó¥Êü•ËØ¢\n    'id:ge'              => 12, \/\/ id > 12\n    ...\n    \n    \/\/ relation ÂÖ≥ËÅîÊü•ËØ¢,Êü•ËØ¢Êù°‰ª∂Âè™ÂØπÂΩìÂâçrelationÂÖ≥ËÅîÊü•ËØ¢ÈôêÂà∂\n    'extInfo.address:like'   => 'Âåó‰∫¨',\n    'extInfo.created_at:gte' => '2019-01-01 00:00:00',\n    \n    \/\/ scope Ëá™ÂÆö‰πâÊü•ËØ¢\n    'address'  => 'Âåó‰∫¨',     \/\/ Êü•Êâæ`scopeAddress($query, $address)`ÊñπÊ≥ï\n    'children' => [1, 2, 3],  \/\/ Êü•Êâæ`scopeChildren($query, $childrenIds)`ÊñπÊ≥ï\n];\n```\n\n#### 2.1.1 È¢ÑÂÆö‰πâÁöÑÂ≠óÊÆµ\n\n|Â≠óÊÆµÂêçÁß∞|Â≠óÊÆµÂÄºÁ±ªÂûã|ËØ¥Êòé|\n|-------|---------|----|\n|`force`|`string`|Âº∫Âà∂Ëµ∞ÊåáÂÆöÁ¥¢Âºï|\n|`order`|`string or array`|ÊåáÂÆöÊéíÂ∫èÊù°‰ª∂|\n|`limit`|`int`|ÊåáÂÆöÊü•ËØ¢Êù°Êï∞|\n|`offset`|`int`|ÊåáÂÆöË∑≥ËΩ¨‰ΩçÁΩÆ|\n|`group`|`string`|ÊåáÂÆöÂàÜÁªÑÂ≠óÊÆµ|\n\n### 2.2 `$columns` Êü•ËØ¢ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ\n\n1. ÊîØÊåÅÊú¨Ë°®Â≠óÊÆµÊü•ËØ¢\n2. ÊîØÊåÅÂÖ≥ËÅîÁªüËÆ°Â≠óÊÆµÊü•ËØ¢\n3. ÊîØÊåÅÂÖ≥ËÅîÊï∞ÊçÆÂ≠óÊÆµÊü•ËØ¢\n\n```php\n$columns = [\n\n    \/\/ Êú¨Ë°®ÁöÑÂ≠óÊÆµÊü•ËØ¢\n    'id',\n    'username',\n    \n    \/\/ ÂÖ≥ËÅîÁªüËÆ°Â≠óÊÆµÊü•ËØ¢\n    'extInfo_count',  \/\/ ÂØπÂ∫î`model`ÂÆö‰πâÁöÑ extInfo ÂÖ≥ËÅî\n    'children_count', \/\/ ÂØπÂ∫î`model`ÂÆö‰πâÁöÑ children ÂÖ≥ËÅî\n    \n    \/\/ ÂÖ≥ËÅîË°®Â≠óÊÆµÊü•ËØ¢\n    'extInfo'  => ['*'], \/\/ ÂØπÂ∫î`model`ÂÆö‰πâÁöÑ extInfo ÂÖ≥ËÅî\n    'children' => ['*'], \/\/ ÂØπÂ∫î`model`ÂÆö‰πâÁöÑ children ÂÖ≥ËÅî\n];\n```\n\n## ‰∏â ÊñπÊ≥ïÂàóË°®\n\n### 3.1 ÊñπÊ≥ïÂàóË°®\n\n>repositoryÊâÄÊúâÊñπÊ≥ïÈÉΩÊòØÂØπÂ§ñÁöÑÔºåËøôÈáåÂè™ÂàóÂá∫Â∏∏Áî®ÊñπÊ≥ï\n\n|ÊñπÊ≥ïÂêçÁß∞|ËøîÂõûÂÄº|ÊñπÊ≥ïËØ¥Êòé|\n|-------|-----|-------|\n|`find($conditions, $columns = [])`|`array or false`|Êü•ËØ¢‰∏ÄÊù°Êï∞ÊçÆ|\n|`findBy($conditions, $column)`|`mixed`|Êü•ËØ¢ÂçïÊù°Êï∞ÊçÆÁöÑÂçï‰∏™Â≠óÊÆµ|\n|`findAll($conditions, $columns = [])`|`array`|Êü•ËØ¢Â§öÊù°Êï∞ÊçÆ|\n|`findAllBy($conditions, $column)`|`array`|Êü•ËØ¢Â§öÊù°Êï∞ÁªÑÁöÑÂçï‰∏™Â≠óÊÆµÊï∞ÁªÑ|\n|`filterFind($conditions, $columns = [])`|`array or false`|ËøáÊª§Êü•ËØ¢Êù°‰ª∂‰∏≠ÁöÑÁ©∫ÂÄºÊü•ËØ¢‰∏ÄÊù°Êï∞ÊçÆ|\n|`filterFindAll($condtions, $columns = [])`|`array`|ËøáÊª§Êü•ËØ¢Êù°‰ª∂‰∏≠ÁöÑÁ©∫ÂÄºÊü•ËØ¢Â§öÊù°Êï∞ÊçÆ|\n|`paginate($conditions = [], $columns = [], $size = 10, $current = null)`|`array`|ÂàÜÈ°µÊü•ËØ¢Êï∞ÊçÆ|\n|`getFilterModel($conditions, $columns = [])`|`Illuminate\\Database\\Eloquent\\Model`|Ëé∑ÂèñÂ∑≤ÁªèËøáÊª§Â§ÑÁêÜÊü•ËØ¢Êù°‰ª∂ÁöÑ`model`|\n|`findCondition($conditions = [], $columns = [])`|`Illuminate\\Database\\Eloquent\\Model`|Ëé∑ÂèñÂ∑≤ÁªèÂ§ÑÁêÜÊü•ËØ¢Êù°‰ª∂ÁöÑ`model`(**‰∏äÈù¢ÊâÄÊúâÊü•ËØ¢ÊñπÊ≥ïÈÉΩÂü∫‰∫éËøô‰∏™ÊñπÊ≥ï**)|\n|`create(array $data)`|`array`|Ê∑ªÂä†Êï∞ÊçÆ|\n|`update($conditions, array $data)`|`array`|‰øÆÊîπÊï∞ÊçÆ(‰ΩøÁî®ÁöÑÊòØÊâπÈáè‰øÆÊîπ)|\n|`delete($conditions)`|`array`|Âà†Èô§Êï∞ÊçÆ(‰ΩøÁî®ÁöÑÊòØÊâπÈáèÂà†Èô§)|\n|`findWhere(array $where, $columns = [])`|`Illuminate\\Database\\Eloquent\\Model`|Ëé∑ÂèñÈÄöËøáÊï∞ÁªÑÊü•ËØ¢ÁöÑ`model`\n\n#### ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$conditions`|`array or string or int`|Êü•ËØ¢Êù°‰ª∂(`string or int or Á¥¢ÂºïÊï∞ÁªÑ[1, 2, 3, 4]`‰ºöËá™Âä®ËΩ¨Êç¢‰∏∫‰∏ªÈîÆÊü•ËØ¢)|\n|`$columns`|`array`|Êü•ËØ¢ÁöÑÂ≠óÊÆµÊï∞ÁªÑ|\n|`$column`|`string`|Êü•ËØ¢ÁöÑÂ≠óÊÆµÂêçÁß∞|\n|`$data`|`array`|ÂàõÂª∫ÊàñËÄÖ‰øÆÊîπÁöÑÊï∞ÁªÑÊï∞ÊçÆ‰ø°ÊÅØ|\n|`$where`|`array`|Êü•ËØ¢Êù°‰ª∂|\n\n### 3.2 ÊîØÊåÅ`model`Ëá™Â∏¶ÊñπÊ≥ï\n\n|ÊñπÊ≥ïÂêçÁß∞    |ËøîÂõûÂÄº| ÊñπÊ≥ïËØ¥Êòé |\n|---------------|-------------|----------|\n|`getConnection()`|`Illuminate\\Database\\Connection`|Ëé∑ÂèñËøûÊé•‰ø°ÊÅØ|\n|`insert(array $values)`|`boolean`|Êñ∞Â¢ûÊï∞ÊçÆ(ÊîØÊåÅÊâπÈáèÊñ∞Â¢û)|\n|`insertGetId(array $values)`|`int`|Êñ∞Â¢ûÊï∞ÊçÆÂπ∂Ëé∑ÂèñÊñ∞Â¢ûID|\n|`firstOrCreate(array $attributes, array $value = [])`|`Illuminate\\Database\\Eloquent\\Model`|Êü•ËØ¢Êï∞ÊçÆÔºå‰∏çÂ≠òÂú®ÈÇ£‰πàÊñ∞Â¢û‰∏ÄÊù°Êï∞ÊçÆ|\n|`firstOrNew(array $attributes, array $value = [])`|`Illuminate\\Database\\Eloquent\\Model`|Êü•ËØ¢Êï∞ÊçÆ„ÄÅ‰∏çÂ≠òÂú®ÈÇ£‰πà`new`Âá∫Êù•|\n|`updateOrCreate(array $attributes, array $value = [])`|`Illuminate\\Database\\Eloquent\\Model`|‰øÆÊîπÊï∞ÊçÆÔºå‰∏çÂ≠òÂú®ÈÇ£‰πàÊñ∞Â¢û‰∏ÄÊù°Êï∞ÊçÆ|\n|`findOrFail($id, $columns = ['*'])`|`Illuminate\\Database\\Eloquent\\Model`|ÈÄöËøá‰∏ªÈîÆÊü•ËØ¢Êï∞ÊçÆÔºå‰∏çÂ≠òÂú®ÊäõÂá∫ÈîôËØØ|\n|`findOrNew($id, $columns = ['*'])` |`Illuminate\\Database\\Eloquent\\Model`|ÈÄöËøá‰∏ªÈîÆÊü•ËØ¢Êï∞ÊçÆÔºå‰∏çÂ≠òÂú®`new`Âá∫Êù•|\n|`findMany($ids, $columns = ['*'])`|`\\Illuminate\\Database\\Eloquent\\Collection`|ÈÄöËøá‰∏ªÈîÆÊï∞ÁªÑÊü•ËØ¢Â§öÊù°Êï∞ÊçÆ|\n\n#### ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$attributes`|`array`|`model`ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ(Êü•ËØ¢Êù°‰ª∂)|\n|`$value`|`array or null`|`model`ÁöÑÂÖ∂‰ªñÂ≠óÊÆµ‰ø°ÊÅØ(‰∏çÂèÇ‰∏éÊü•ËØ¢„ÄÅÂèÇ‰∏éÊñ∞Â¢ûÂíå`new`)\n|`$values`|`array`|Êñ∞Â¢ûÊï∞ÊçÆÈúÄË¶ÅÁöÑÂ≠óÊÆµ => ÂÄº Êï∞ÁªÑ‰ø°ÊÅØ\n|`$id`|`int or string`|‰∏ªÈîÆIDÂÄº|\n|`$ids`|`array`|‰∏ªÈîÆIDÊï∞ÁªÑ|\n|`$columns`|`array`|Êü•ËØ¢ÁöÑÂ≠óÊÆµ‰ø°ÊÅØ|\n\n### 3.3 ÈÄöËøá`findCondition($conditions)`Êü•ËØ¢ÂêéËΩ¨Êç¢‰∏∫`model`Êü•ËØ¢ÊñπÊ≥ï\n\n|ÊñπÊ≥ïÂêçÁß∞|ËøîÂõûÂÄº|ÊñπÊ≥ïËØ¥Êòé|\n|---------------|-------------|----------|\n|`first($conditions, $columns = ['*'])`|`Illuminate\\Database\\Eloquent\\Model or null`|Êü•ËØ¢‰∏ÄÊù°Êï∞ÊçÆ|\n|`get($conditions, $columns = ['*'])`|`Illuminate\\Database\\Eloquent\\Collection`|Êü•ËØ¢Â§öÊù°Êï∞ÊçÆ|\n|`pluck($conditions, $column, $key = null)`|`Illuminate\\Support\\Collection`|Êü•ËØ¢Âçï‰∏™Â≠óÊÆµ‰ø°ÊÅØ|\n|`firstOrFail($conditions)`|`Illuminate\\Database\\Eloquent\\Model`|Êü•ËØ¢‰∏ÄÊù°Êï∞ÊçÆ„ÄÅÊ≤°ÊúâÈÇ£‰πàÊäõÂá∫ÈîôËØØ|\n|`count($conditions = [])`|`int`|ÁªüËÆ°Êü•ËØ¢|\n|`max($conditions, $column)`|`int or mixed`|ÊúÄÂ§ßÂÄºÊü•ËØ¢|\n|`min($conditions, $column)`|`int or mixed`|ÊúÄÂ∞èÂÄºÊü•ËØ¢|\n|`avg($conditions, $column)`|`int or mixed`|Âπ≥ÂùáÂÄºÊü•ËØ¢|\n|`sum($conditions, $column)`|`int or mixed`|Ê±ÇÂíåÊü•ËØ¢|\n|`toSql($conditions)`|`string`|Ëé∑ÂèñÊâßË°åÁöÑ`SQL`|\n|`getBindings($conditions = [])`|`array or mixed`|Ëé∑ÂèñÊü•ËØ¢ÁªëÂÆöÁöÑÂèÇÊï∞|\n\n#### ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$conditions`|`array or string or int`|Êü•ËØ¢Êù°‰ª∂(`string or int or Á¥¢ÂºïÊï∞ÁªÑ[1, 2, 3, 4]`‰ºöËá™Âä®ËΩ¨Êç¢‰∏∫‰∏ªÈîÆÊü•ËØ¢)|\n|`$columns`|`array`|Êü•ËØ¢ÁöÑÂ≠óÊÆµÊï∞ÁªÑ|\n|`$column`|`string`|Êü•ËØ¢ÁöÑÂ≠óÊÆµÂêçÁß∞|\n|`$key`|`string or null`|Êü•ËØ¢Âçï‰∏™Â≠óÊÆµÁªÑÊàêÊï∞ÁªÑÁöÑ`key`(Á¥¢Âºï‰∏ãÊ†á‰ΩøÁî®Â≠óÊÆµ)|\n\n## Âõõ Â¢ûÂà†ÊîπÁöÑ‰∫ã‰ª∂ÊñπÊ≥ï\n\n>Â≠êÁ±ªÂÆö‰πâ‰∫ÜËøô‰∫õÊñπÊ≥ïÔºåÊâç‰ºöÊâßË°åÔºåÂ¶ÇÊûúÊÉ≥ÈòªÊ≠¢‰∏ªÊñπÊ≥ïÊâßË°åÔºåÂπ∂ËÉΩËÆ©‰∏ªÊñπÊ≥ïËøîÂõûÈîôËØØ‰ø°ÊÅØÔºåÁõ¥Êé•ÊäõÂá∫ÈîôËØØÂ∞±ÂèØ‰ª•\n\n### 4.1 Êñ∞Â¢ûÁöÑ‰∫ã‰ª∂ Âú®`create($data)` ÊâßË°åÁöÑÊó∂ÂÄôËß¶Âèë\n\n1. `beforeCreate($data)` Êñ∞Â¢û‰πãÂâç\n\n2. `afterCreate($data, $news)`  Êñ∞Â¢û‰πãÂêé\n\n#### 4.1.1 ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$data`|`array`|ËøáÊª§ÊéâÂπ≤Êâ∞Êï∞ÊçÆ(ÈùûË°®‰∏≠Â≠óÊÆµÁöÑÊï∞ÊçÆ)ÁöÑÊï∞ÁªÑ|\n|`$news`|`array`|Êñ∞Â¢ûÊàêÂäüË∞ÉÁî® `model->toArray()` Êï∞ÁªÑ|\n\n### 4.2 ‰øÆÊîπÁöÑ‰∫ã‰ª∂ Âú®`update($conditions, array $data)` ÊâßË°åÁöÑÊó∂ÂÄôËß¶Âèë\n\n1. `beforeUpdate($conditions, $data)` ‰øÆÊîπ‰πãÂâç\n \n2. `afterUpdate($conditions, $data, $row)` ‰øÆÊîπ‰πãÂêé\n\n#### 4.2.1 ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$conditions`|`array`|Â§ÑÁêÜ‰∫Ü‰∏ªÈîÆÊü•ËØ¢ÂêéÁöÑÊü•ËØ¢Êù°‰ª∂Êï∞ÁªÑ|\n|`$data`|`array`|ËøáÊª§ÊéâÂπ≤Êâ∞Êï∞ÊçÆ(ÈùûË°®‰∏≠Â≠óÊÆµÁöÑÊï∞ÊçÆ)ÁöÑÊï∞ÁªÑ|\n|`$row`|`int`|‰øÆÊîπÂèóÂΩ±ÂìçÁöÑË°åÊï∞|\n\n### 4.3 Âà†Èô§ÁöÑ‰∫ã‰ª∂ Âú®`delete($conditions)` ÊâßË°åÁöÑÊó∂ÂÄôËß¶Âèë\n\n1. `beforeDelete($conditions)` Âà†Èô§‰πãÂâç\n\n2. `afterDelete($conditions, $row)` Âà†Èô§‰πãÂêé\n\n#### 4.3.1 ÂèÇÊï∞ËØ¥Êòé\n\n|ÂèÇÊï∞ÂêçÁß∞    |ÂèÇÊï∞Á±ªÂûã| ÂèÇÊï∞ËØ¥Êòé |\n|---------------|-------------|----------|\n|`$conditions`|`array`|Â§ÑÁêÜ‰∫Ü‰∏ªÈîÆÊü•ËØ¢ÂêéÁöÑÊü•ËØ¢Êù°‰ª∂Êï∞ÁªÑ|\n|`$row`       |`int`  |Âà†Èô§ÂèóÂΩ±ÂìçÁöÑË°åÊï∞|\n\n### 4.4 ÂÖ≥‰∫é`$conditions` Â§ÑÁêÜ‰∏∫‰∏ªÈîÆÊü•ËØ¢\n\n‰∏ç‰∏∫Á©∫ÁöÑ Â≠óÁ¨¶‰∏≤„ÄÅÊï¥Êï∞„ÄÅÊµÆÁÇπÊï∞„ÄÅÁ¥¢ÂºïÊï∞ÁªÑ ÈÉΩ‰ºöË¢´ËΩ¨‰∏∫‰∏ªÈîÆÊü•ËØ¢\n\n```php\n\/\/ ÂÅáËÆæË°®ÁöÑ‰∏ªÈîÆ‰∏∫id\n\n$conditions = 1;            \/\/ ‰ºöË¢´ËΩ¨‰∏∫ ['id' => 1]\n$conditions = '1';          \/\/ ‰ºöË¢´ËΩ¨‰∏∫ ['id' => '1']\n$conditions = [1, 2, 3];    \/\/ ‰ºöË¢´ËΩ¨‰∏∫ ['id' => [1, 2, 3, 4]]\n\n\/\/ ÂÖ≥ËÅîÊï∞ÁªÑ‰∏≠ÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™ÂÖÉÁ¥†‰∏∫Á¥¢Âºï‰∏ãÊ†áÁöÑÔºå‰ºöË¢´ËÆ§‰∏∫ÊòØ Á¥¢ÂºïÊï∞ÁªÑ\n\n$conditions = ['id' => 1, 'name' => '123', '789']\n\nÂêåÊ†∑‰ºöË¢´ËÆ§‰∏∫ÊòØÁ¥¢ÂºïÊï∞ÁªÑÔºå‰ºöËΩ¨‰∏∫\n\n$conditions = ['id' => [1, '123', '789']]\n\n```\n\n## ‰∫î ÂÖ∂‰ªñËØ¥Êòé\n\n### 5.1 ÂÖ≥‰∫é`repository`ÁöÑ`create`„ÄÅ`update`„ÄÅ`delete` ÁöÑËøîÂõû\n\nËøô‰∏â‰∏™ÂáΩÊï∞‰∏çÁÆ°Â§ÑÁêÜÊàêÂäüÂíåÂ§±Ë¥•ÔºåËøîÂõûÁöÑÈÉΩÊòØÊï∞ÁªÑ‰ø°ÊÅØ„ÄÇÂõ†‰∏∫`php`‰∏çËÉΩÂÉè`golang`ÈÇ£Ê†∑,\nÂèØ‰ª•Â§öËøîÂõûÔºåËÄåÂú®Êàë‰ª¨ÈÄªËæë‰∏≠ÔºåÁªèÂ∏∏ÈúÄË¶ÅÁü•ÈÅìÊâßË°åÈîôËØØ‰∫ÜÔºåÊòØ‰ªÄ‰πàÊ†∑ÁöÑÈîôËØØ‰ø°ÊÅØÔºåÊâÄ‰ª•ËøôÈáå\nÈÉΩÊòØÈÄöËøáÊï∞ÁªÑÁöÑÊñπÂºèËøîÂõûÔºåËøôÊ†∑Â∞±Ëß£ÂÜ≥Â§öÂÄºËøîÂõûÈóÆÈ¢ò„ÄÇËøô‰πüÊòØÂèó`golang`ÁöÑÂΩ±ÂìçÔºÅ‰∏çËøá\n`laravel`ÂÖ∂ÂÆûÊõ¥Êé®ËçêÊòØÈÄöËøáÊäõÂá∫ÈîôËØØÊñπÂºèÔºåÂéªÁªü‰∏ÄÁÆ°ÁêÜÊâÄÊúâÁöÑÈîôËØØ‰ø°ÊÅØ„ÄÇÊâÄ‰ª•Â¶ÇÊûú‰∏çÂñúÊ¨¢\nÁé∞Âú®Êï∞ÁªÑÁöÑËøîÂõûÊñπÂºèÁöÑËØùÔºåÂè™ÈúÄË¶ÅÈáçÂÜô `success($data, $message === 'ok')` \nÂíå `error($message, $data = [])` Ëøô‰∏§‰∏™ÊñπÊ≥ïÂ∞±Â•Ω‰∫Ü\n\n### 5.2 `repository` Êü•ËØ¢ `find`, `findAll` Êü•ËØ¢ÁªìÊûúÈÉΩÊòØ `model->toArray()` ÁöÑÊï∞ÁªÑÔºåÂπ∂‰∏çÊòØ `model` ÂØπË±°\n\n### 5.3 ÂØπ‰∫é`model`ÁöÑË¶ÅÊ±Ç\n\n1. `create` Âíå `update` ÈÉΩÊòØÊâπÈáèËµãÂÄºÔºåÈúÄË¶Å`model`ÂÆö‰πâÊâπÈáèËµãÂÄºÁöÑÁôΩÂêçÂçï`$fillable` ÊàñËÄÖ ÈªëÂêçÂçï `$guarded`\n2. ÈúÄË¶ÅÂÆö‰πâ `$columns` Â≠óÊÆµ‰ø°ÊÅØÔºåË°®Á§∫Ë°®‰∏≠ÈÉΩÊúâÂì™‰∫õÂ≠óÊÆµ\n\n    ```php\n    public $columns = ['id', 'title', 'content', 'created_at', 'updated_at'];\n    ```\n    \n    >ËôΩÁÑ∂Ëøô‰∏ÄÊ≠•ÊòØÈùûÂøÖÈ°ªÁöÑÔºå‰ΩÜÂÆö‰πâ‰∫Ü`$columns`‰ºöÂáèÂ∞ë‰∏ÄÊ¨°`SQL`Êü•ËØ¢ÁöÑ‰ª£‰ª∑\n\nÊòØ‰∏çÊòØÈùûÂ∏∏ÁÆÄÊ¥ÅÊñπ‰æø ^_^ üòã\nÂêéÈù¢‰ºöÁªßÁª≠Ë°•ÂÖÖ"
    },
    "msg": "ok"
}